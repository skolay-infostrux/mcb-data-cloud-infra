name: Deploy SAG Infra
on:
  workflow_dispatch:
    inputs:
      logDebug:
        type: choice
        description: TF_LOG debug level
        options:
        - TRACE
        - 'OFF'
        required: true
        default: 'OFF'

jobs:
  Deploy:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.snowflake_account }}
      SNOWFLAKE_REGION: ${{ secrets.snowflake_region }}
      SNOWFLAKE_USER: ${{ secrets.snowflake_user }}
      _SNOWFLAKE_PRIVATE_KEY: ${{ secrets.snowflake_private_key }}
      SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: ${{ secrets.snowflake_private_key_passphrase }}
      SNOWFLAKE_PRIVATE_KEY_PATH: /tmp/snowflake_rsa_key.p8
    defaults:
      run:
        shell: bash
        working-directory: ./
    concurrency: infra-deploy
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    steps:
    - uses: actions/checkout@v3

    - name: Set terraform environment variables
      run: |
        # ALL ENVS
        echo "TF_LOG=${{ github.event.inputs.logDebug }}" >> $GITHUB_ENV
        echo "BACKEND_ENCRYPT=true" >> $GITHUB_ENV
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2.0.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-duration-seconds: 900

    - name: Setup Authentication to Snowflake
      run: |
        printf '%s\n' "${_SNOWFLAKE_PRIVATE_KEY}" > "${SNOWFLAKE_PRIVATE_KEY_PATH}"

    - name: install terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: 1.3.6
        terraform_wrapper: false

    - name: Initialize Terraform
      run: |
        terraform init
    - name: Format terraform
      run: terraform fmt -check

    - name: Validate terraform
      run: terraform validate

    - name: Plan terraform
      run: |
        terraform plan -out=./output.tfplan
    # Publish output
    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-file
        path: ./output.tfplan

    - name: Apply terraform
      run: |
        terraform apply -auto-approve ./output.tfplan
